@using Todo.Controllers
@using Todo.Data.Entities
@using Todo.Services
@model Todo.Models.TodoLists.TodoListDetailViewmodel

@{
    ViewData["Title"] = $"List: {Model.Title}";
}

@section Scripts {
    <script type="text/javascript" src="~/js/todolists/detail.js"></script>
}

<h2>@ViewData["Title"]</h2>

<div class="col-md-6">

    <div>
        <button class="btn-default button-group-hide-done-button" onclick="hideDoneItems()">Hide incomplete tasks</button>
        <button class="btn-default button-group-show-done-button" onclick="showDoneItems()" style="display:none">Show incomplete tasks</button>
    </div>
    
    <ul class="list-group">

        <li class="list-group-item">
            <a asp-action="Create" asp-controller="TodoItem" asp-route-todoListId="@Model.TodoListId">
                <strong>Add New Item</strong>
            </a>
        </li>
        
        <li class="list-group-item">
            @if (Model.OrderByRank)
            {
                <div>This list is ordered by rank.</div>
                <a asp-action="Detail" asp-controller="TodoList" asp-route-todoListId="@Model.TodoListId" asp-route-orderByRank="false">
                    <strong>Order by importance instead</strong>
                </a>
            }
            else
            {
                <div>This list is ordered by importance.</div>
                <a asp-action="Detail" asp-controller="TodoList" asp-route-todoListId="@Model.TodoListId" asp-route-orderByRank="true">
                    <strong>Order by rank instead</strong>
                </a>
            }
        </li>

        @foreach (var item in Model.Items)
        {
            string contextualClass;
            switch (item.Importance)
            {
                case Importance.High:
                    contextualClass = "list-group-item-danger";
                    break;
                case Importance.Low:
                    contextualClass = "list-group-item-info";
                    break;
                default:
                    contextualClass = "";
                    break;
            }

            var doneClass = item.IsDone ? "list-group-item-done" : "";

            <li class="list-group-item @contextualClass @doneClass">

                <div class="row">

                <div class="col-md-8">
                    <a asp-action="Edit" asp-controller="TodoItem" asp-route-todoItemId="@item.TodoItemId">

                        @if (item.IsDone)
                        {
                            <s>@item.Title</s>
                        }
                        else
                        {
                            <text>@item.Title</text>
                        }
                    </a>
                </div>

                <div class="col-md-4 text-right">
                    <small>
                        @item.ResponsibleParty.UserName

                        <img src="https://www.gravatar.com/avatar/@Gravatar.GetHash(item.ResponsibleParty.Email)?s=30"/>

                    </small>
                </div>
                </div>

            </li>
        }
    </ul>
</div>